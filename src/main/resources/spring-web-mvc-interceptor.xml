<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!--
	    在处理器映射器中配置拦截器，实现拦截器的调用
	-->
	<!--1.配置拦截器对象-->
	<bean name="myInterceptor" class="com.briup.web.interceptor.MyhandlerInterceptor"/>
	<bean name="myInterceptor2" class="com.briup.web.interceptor.MyhandlerInterceptor2"/>
	<!--
		2.在处理器映射器中配置拦截器对象
	-->
	<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
		<property name="interceptors">
			<list>
				<!-- 该拦截器实现不通过拦截，返回拦截信息
				<ref bean="myInterceptor"/>
				-->
				<!--
					该拦截器主要实现拦截请求后修改模型数据
				-->
				<ref bean="myInterceptor2"/>
			</list>
		</property>

	</bean>
	<!--3.配置控制器/处理器： handler
		作用：接收请求信息，作出响应操作
	-->
	<bean name="/hello" class="com.briup.web.controller.part1.JackController"/>



	<!--1.视图解析器
    作用： 将逻辑视图名转换为物理视图
    例如： 将jack视图名转换为 /WEB-INF/jsp/jack.jsp 物理视图名
  -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--可以实现解析jsp页面的jstl标签-->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<!--配置物理视图前缀信息-->
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<!--配置物理视图后缀信息-->
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!--2.解决静态资源无法访问的问题-->
	<mvc:default-servlet-handler/>

</beans>